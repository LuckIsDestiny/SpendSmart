http:
  port: 9090
  host: localhost

admin:
  port: 9876
  host: localhost

apiEndpoints:
  authAPI:
    paths: ['/api/auth/*']
  usersAPI:
    paths: ['/api/users/*']
  transactionsAPI:
    paths: ['/api/transactions/*']
  budgetsAPI:
    paths: ['/api/budgets/*']
  savingsAPI:
    paths: ['/api/savings/*']

serviceEndpoints:
  authService:
    url: 'http://localhost:3001'
  transactionsService:
    url: 'http://localhost:3002'
  budgetSavingsService:
    url: 'http://localhost:3003'

policies:
  - cors
  - jwt
  - proxy

pipelines:
  authPipeline:
    apiEndpoints: [authAPI]
    policies:
      - cors: {}
      - proxy:
          action:
            serviceEndpoint: authService

  usersPipeline:
    apiEndpoints: [usersAPI]
    policies:
      - cors: {}
      - jwt:
          action:
            secretOrPublicKey: '${JWT_SECRET}'
            credentialsRequired: true        # require login
            algorithms: ['HS256']
            checkCredentialExistence: false  # still skip Consumer
      - proxy:
          action:
            serviceEndpoint: authService

  transactionsPipeline:
    apiEndpoints: [transactionsAPI]
    policies:
      - cors: {}
      - jwt:
          action:
            secretOrPublicKey: '${JWT_SECRET}'
            credentialsRequired: true        # protect tx endpoints
            algorithms: ['HS256']
            checkCredentialExistence: false  # uncontrolled mode
      - proxy:
          action:
            serviceEndpoint: transactionsService
            
  budgetsPipeline:
    apiEndpoints: [budgetsAPI]
    policies:
      - cors: {}
      - jwt:
          action:
            secretOrPublicKey: '${JWT_SECRET}'
            credentialsRequired: true        # protect tx endpoints
            algorithms: ['HS256']
            checkCredentialExistence: false  # uncontrolled mode
      - proxy:
          action:
            serviceEndpoint: budgetSavingsService
  
  savingsPipeline:
    apiEndpoints: [savingsAPI]
    policies:
      - cors: {}
      - jwt:
          action:
            secretOrPublicKey: '${JWT_SECRET}'
            credentialsRequired: true        # protect tx endpoints
            algorithms: ['HS256']
            checkCredentialExistence: false  # uncontrolled mode
      - proxy:
          action:
            serviceEndpoint: budgetSavingsService
